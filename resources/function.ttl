@prefix rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sh:   <http://www.w3.org/ns/shacl#> .
@prefix xsd:  <http://www.w3.org/2001/XMLSchema#> .
@prefix foaf: <http://xmlns.com/foaf/0.1/>.
@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix rml: <http://semweb.mmlab.be/ns/rml#> .
@prefix fnml: <http://semweb.mmlab.be/ns/fnml#> .
@prefix fno: <http://semweb.datasciencelab.be/ns/function#> .
@prefix carml: <http://carml.taxonic.com/carml/> .
@prefix rmlsh: <http://www.taxonic.com/ns/rml-shacl#> .

rr:DataTypeShape
    a sh:NodeShape ;
    sh:message "Data type and language tag defined in same term map" ;
    sh:targetSubjectsOf rr:datatype, rr:language ;
    sh:targetClass rr:objectMap;
    sh:xone (
                [
                    sh:property [
                                    sh:path rr:datatype ;
                                    sh:minCount 1;
                                ]
                ]

                [
                    sh:property [
                                    sh:path rr:language ;
                                    sh:minCount 1;
                                ]
                ]
                [
                    sh:property [
                                    sh:path rr:language, rr:datatype ;
                                    sh:minCount 0;
                                ]
                ]
            ) ;

    sh:property [
                    sh:message "More than one datatype in a term map.";
                    sh:path rr:datatype ;
                    sh:maxCount 1;

                ]
.

rr:SubjectMapShape
    a sh:NodeShape ;
    sh:targetObjectsOf rr:subjectMap ;
    sh:targetClass     rr:SubjectMap ;
    sh:property
        [
            sh:message "rr:termType for the subject map should be rr:IRI or rr:BlankNode." ;
            sh:path rr:termType ;
            sh:in ( rr:IRI rr:BlankNode ) ;
        ] ,
        [
            sh:message "rr:class for the subject map should be an IRI." ;
            sh:path rr:class ;
            sh:nodeKind sh:IRI ;
        ] ;
.

rr:PredicateObjectMapShape
    a sh:NodeShape ;
    sh:targetSubjectsOf rr:predicate, rr:predicateMap, rr:object, rr:objectMap ;
    sh:targetObjectsOf  rr:predicateObjectMap ;
    sh:targetClass rr:PredicateObjectMap ;

    sh:property
        [
            sh:message "Predicate object map should contain at least one predicate map." ;
            sh:path [
                        sh:alternativePath (rr:predicate rr:predicateMap) ;
                    ] ;
            sh:minCount 1 ;
        ] ,
        [
            sh:message "Predicate object map should contain at least one object map." ;
            sh:path [
                        sh:alternativePath (rr:object rr:objectMap) ;
                    ] ;
            sh:minCount 1 ;
        ] ;
.

rr:JoinShape
    a sh:NodeShape ;
    sh:targetClass rr:Join ;
    sh:targetSubjectsOf rr:parent, rr:child ;
    sh:targetObjectsOf rr:joinCondition ;

    sh:property
        [
            sh:message "Join should have one and only one child." ;
            sh:path rr:child ;
            sh:minCount 1 ;
            sh:maxCount 1 ;
        ] ,
        [
            sh:message "Value of child in join should be a literal value." ;
            sh:path rr:child ;
            sh:nodeKind sh:Literal ;
        ] ,
        [
            sh:message "Join should have one and only one parent." ;
            sh:path rr:parent ;
            sh:minCount 1 ;
            sh:maxCount 1 ;
        ] ,
        [
            sh:message "Join should have at least one parent." ;
            sh:path rr:parent ;
            sh:nodeKind sh:Literal ;
        ] ;
.

rr:LogicalTableShape
    a sh:NodeShape ;
    sh:targetClass rr:TriplesMap ;
    sh:targetSubjectsOf rr:logicalTable, rr:subject, rr:subjectMap ;
    sh:property [
                    sh:path rr:logicalTable ;
                    sh:message "Exactly one logical table should exist.";
                    sh:minCount 1 ;
                    sh:maxCount 1 ;
                ] ;


.


rr:TableViewShape
    a sh:NodeShape ;
    sh:targetClass rr:LogicalTable ;
    sh:targetObjectsOf rr:logicalTable;
    sh:targetSubjectsOf rr:tableName, rr:sqlQuery;
    sh:message "Logical table should exactly one R2RML view or SQL view" ;
    sh:xone (
                [
                    sh:property [
                                    sh:path rr:tableName ;
                                    sh:minCount 1 ;
                                    sh:maxCount 1 ;
                                ] ;
                ]
                [
                    sh:property [
                                    sh:path rr:sqlQuery ;
                                    sh:minCount 1 ;
                                    sh:maxCount 1 ;
                                ] ;
                ]
            ) ;


.

rr:PredicateShape
    a sh:NodeShape ;
    sh:message "Predicate term type should be an IRI," ;
    sh:targetObjectsOf rr:predicateMap, rr:predicateObjectMap ;

    sh:property [
                    sh:message "Value for rr:termType on predicate map should be rr:IRI." ;
                    sh:path rr:termType ;
                    sh:in ( rr:IRI ) ;
                ] ;
.



rr:ObjectMapShape
    a sh:NodeShape ;
    sh:targetObjectsOf rr:objectMap ;
    sh:property [
                    sh:message "Value for rr:termType on subject map should be rr:IRI or rr:BlankNode or rr:Literal." ;
                    sh:path rr:termType ;
                    sh:in ( rr:IRI rr:BlankNode rr:Literal ) ;
                ] ;

.

rr:PredicateShape
    a sh:NodeShape ;
    sh:targetObjectsOf rr:predicate ;
    sh:targetObjectsOf rr:predicateMap, rr:predicateObjectMap ;
    sh:property
        [
            sh:message "rr:predicate should be a valid IRI" ;
            sh:path rr:predicate ;
            sh:nodeKind sh:IRI ;
        ] ;
.

rr:GraphMapShape
    a sh:NodeShape ;
    sh:targetObjectsOf rr:graphMap ;

    sh:property [
                    sh:message "rr:termType on graph map should be rr:IRI." ;
                    sh:path rr:termType ;
                    sh:in ( rr:IRI ) ;
                ] ;
.

#rr:DataTypeValueShape
#    a sh:NodeShape ;
#    sh:targetSubjectsOf rr:datatype, rr:language ;
#    sh:targetClass rr:objectMap;
#    sh:property [
#                    sh:message "rr:datatype value should be a valid IRI" ;
#                    sh:path rr:datatype;
#                    sh:in ( rr:IRI ) ;
#                ] ;
#.



#rr:VocabularyShape
#    sh:targetSubjectsOf rr:predicate;
#    sh:targetObjectsOf rr:predicateObjectMap;
#    sh:targetClass rr:PredicateObjectMap;
#
#    sh:js [
#              a sh:JSConstraint ;
#              sh:message "No human labelling" ;
#              sh:jsFunctionName "hasHumanReadableLabelling" ;
#              sh:jsLibrary [ sh:jsLibraryURL "file:///home/alex/Desktop/R2RML_Validator/resources/mapping_consistency.js"^^xsd:anyURI ] ;
#          ];
#.

rr:DomainShape
    sh:targetSubjectsOf rr:predicate;
    sh:targetObjectsOf rr:predicateObjectMap;
    sh:targetClass rr:PredicateObjectMap;

    sh:js [
              a sh:JSConstraint ;
              sh:message "Domain Violation Detected" ;
              sh:jsFunctionName "validateDomain" ;
              sh:jsLibrary [ sh:jsLibraryURL "file:///home/alex/Desktop/R2RML_Validator/resources/mapping_consistency.js"^^xsd:anyURI ] ;

          ];

.




#rr:MachineLicenseShape
#    sh:targetSubjectsOf rr:predicate;
#    sh:targetObjectsOf rr:predicateObjectMap;
#    sh:targetClass rr:PredicateObjectMap;
#    sh:js [
#              a sh:JSConstraint ;
#              sh:message "No machine-readable license." ;
#              sh:jsFunctionName "validateMachineLicense" ;
#              sh:jsLibrary [ sh:jsLibraryURL "file:///home/alex/Desktop/R2RML_Validator/resources/mapping_consistency.js"^^xsd:anyURI ] ;
#
#          ];
#
#.

rr:ValidDatatypeShape
    sh:targetSubjectsOf rr:predicate;
    sh:targetObjectsOf rr:predicateObjectMap;
    sh:targetClass rr:PredicateObjectMap;
    sh:js [
              a sh:JSConstraint ;
              sh:jsFunctionName "validateDatatype" ;
              sh:message "Incorrect datatype.";
              sh:jsLibrary [ sh:jsLibraryURL "file:///home/alex/Desktop/R2RML_Validator/resources/mapping_consistency.js"^^xsd:anyURI ] ;

          ];
.



rr:URIlength
    a sh:NodeShape ;
    sh:targetObjectsOf rr:subjectMap, rr:predicateObjectMap ;
    sh:targetClass     rr:SubjectMap, rr:PredicateObjectMap ;
    sh:property
        [
            sh:message "URI longer than 80 characters." ;
            sh:path rr:class, rr:predicate ;
            sh:maxLength 80;
        ] ;
.

rr:URIqueryParameter
    a sh:NodeShape ;
    sh:targetObjectsOf rr:subjectMap, rr:predicateObjectMap ;
    sh:targetClass     rr:SubjectMap, rr:PredicateObjectMap ;
    sh:property
        [
            sh:message "URI comtains query parameter." ;
            sh:path rr:class, rr:predicate ;
            sh:pattern "^[^?]+$" ;
        ] ;
.



rr:VariousLanguagesShape
    sh:message "Data in only one language.";
    sh:targetSubjectsOf rr:language ;
    sh:targetClass rr:objectMap;
    sh:xone (
                [
                    sh:property [
                                    sh:path rr:language ;
                                    sh:minCount 2;
                                ]
                ]
                [
                    sh:property [
                                    sh:path rr:language;
                                    sh:maxCount 0;
                                ]
                ]
            ) ;
.

rr:RDFstructures
    a sh:NodeShape ;
    sh:targetObjectsOf rr:predicateObjectMap ;
    sh:targetClass rr:PredicateObjectMap;
    sh:message "Usage of RDF structurees." ;
    sh:not
        [
            sh:path rr:predicate ;
            sh:in (rdf:Statement rdf:Alt rdf:Bag rdf:Seq rdf:Container rdf:List);
        ] ;

.


rr:dd
    a sh:NodeShape ;
    sh:targetObjectsOf rr:predicateObjectMap,rr:subjectMap,rr:objectMap ;
    sh:message "Usage of Blank node." ;
    sh:not
        [
            sh:path rr:termType ;
            sh:hasValue rr:BlankNode;
        ] ;

.

#rr:LowLatencyShape
#    sh:targetSubjectsOf rr:predicate;
#    sh:targetObjectsOf rr:predicateObjectMap;
#    sh:targetClass rr:PredicateObjectMap;
#    sh:js [
#              a sh:JSConstraint ;
#              sh:message "Low latency detected." ;
#              sh:jsFunctionName "validateLowLatency" ;
#              sh:jsLibrary [ sh:jsLibraryURL "file:///home/alex/Desktop/R2RML_Validator/resources/mapping_consistency.js"^^xsd:anyURI ] ;
#
#          ];
#
#.

rr:DuplicateTriplesShape
    sh:targetSubjectsOf rr:predicate;
    sh:targetObjectsOf rr:predicateObjectMap;
    sh:targetClass rr:PredicateObjectMap;
    sh:js [
              a sh:JSConstraint ;
              sh:message "Duplicate triples detected." ;
              sh:jsFunctionName "validateDuplicateTriples" ;
              sh:jsLibrary [ sh:jsLibraryURL "file:///home/alex/Desktop/R2RML_Validator/resources/mapping_consistency.js"^^xsd:anyURI ] ;

          ];

.


rr:DisjointShape
    sh:targetObjectsOf rr:class;
    sh:targetObjectsOf  rr:subjectMap ;
    sh:targetClass rr:SubjectMap ;
    sh:js [
              a sh:JSConstraint ;
              sh:message "Disjoint Classes Detected" ;
              sh:jsFunctionName "validateDisjointClasses" ;
              sh:jsLibrary [ sh:jsLibraryURL "file:///home/alex/Desktop/R2RML_Validator/resources/mapping_consistency.js"^^xsd:anyURI ] ;

          ];
.

rr:AccessibilityShape
    sh:targetObjectsOf rr:predicateObjectMap;
    sh:targetClass rr:PredicateObjectMap;
    sh:js [
              a sh:JSConstraint ;
              sh:message "Unable to derference URI." ;
              sh:jsFunctionName "isAccessible" ;
              sh:jsLibrary [ sh:jsLibraryURL "file:///home/alex/Desktop/R2RML_Validator/resources/mapping_consistency.js"^^xsd:anyURI ] ;

          ];

.


rr:UndefinedShape
    sh:targetObjectsOf rr:predicateObjectMap;
    sh:targetClass rr:PredicateObjectMap;
    sh:js [
              a sh:JSConstraint ;
              sh:message "Usage of undefined class or properties" ;
              sh:jsFunctionName "ValidateVocabularyCompleteness" ;
              sh:jsLibrary [ sh:jsLibraryURL "file:///home/alex/Desktop/R2RML_Validator/resources/mapping_consistency.js"^^xsd:anyURI ] ;

];

.

